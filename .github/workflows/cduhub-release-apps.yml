name: Build and Release CduHub applications

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha-*'
      - 'v*.*.*-beta-*'

jobs:
  build:
    runs-on: windows-latest
    env:
      PUBLISH_DIR: publish
    steps:
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
        with:
           vs-version: '17.0'   # VS2022

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Checkout source
        uses: actions/checkout@v4
  
      - name: Restore NuGet packages
        run: dotnet restore cduhub.sln

      - name: Publish cduhub-windows
        run: msbuild apps\cduhub-windows\cduhub-windows.csproj /p:Configuration=Release /p:PublishDir=..\..\${{ env.PUBLISH_DIR }}\cduhub-windows /t:Publish

      - name: Build cduhub-windows installer
        run: iscc.exe /DVERSION=${{ github.ref_name }} installers\innosetup\cduhub-windows.iss

      - name: Upload cduhub-windows installer
        uses: actions/upload-artifact@v4
        with:
          name: cduhub-windows-${{ github.ref_name }}.exe
          path: installers\innosetup\Output\cduhub-windows-${{ github.ref_name }}.exe

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download cduhub-windows installer
        uses: actions/download-artifact@v4
        with:
          name: cduhub-windows-${{ github.ref_name }}.exe
          path: .

      - name: Get previous version tag
        id: get_prev_tag
        run: |
          PREV_TAG=$(git tag --list 'v[0-9]*' --sort=-v:refname | grep -v "^${GITHUB_REF_NAME}$" | head -n 1)
          if [ -z "$PREV_TAG" ]; then
            echo "PREV_TAG=" >> $GITHUB_ENV
          else
            echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          fi

      - name: Generate changelog file
        run: |
          if [ -z "${{ env.PREV_TAG }}" ]; then
            git log --pretty=format:"* %s" > changelog.txt
          else
            git log ${{ env.PREV_TAG }}..HEAD --pretty=format:"* %s" > changelog.txt
          fi

      - name: Determine whether pre-release
        id: check_prerelease
        run: |
          if [[ "${GITHUB_REF_NAME}" =~ -(alpha|beta)- ]]; then
            echo "PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: changelog.txt
          draft: true
          prerelease: ${{ env.PRERELEASE }}
          files: |
            cduhub-windows-${{ github.ref_name }}.exe